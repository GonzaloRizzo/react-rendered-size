{"code":"/* globals HTMLElement,HTMLDocument */\r\n// external dependencies\r\nimport { findDOMNode, render } from 'react-dom';\r\nimport { RENDER_CONTAINER_ID } from './constants';\r\n/**\r\n * @function getMainContainer\r\n *\r\n * @description\r\n * get the main container that future containers will be rendered into\r\n *\r\n * @param doc document to render into\r\n * @returns the main container that all future containers will render into\r\n */\r\nexport var getMainContainer = function (doc) {\r\n    var container = doc.createElement('div');\r\n    container.id = RENDER_CONTAINER_ID;\r\n    container.style.left = '-9999px';\r\n    container.style.position = 'absolute';\r\n    container.style.top = '-9999px';\r\n    container.style.visibility = 'hidden';\r\n    return container;\r\n};\r\n/**\r\n * @function getNewContainer\r\n *\r\n * @description\r\n * get a new container that has the necessary styles for rendering\r\n *\r\n * @param doc document to create element with\r\n * @param type the type of element to use for the container\r\n * @param passedContainer the passed container to used, instead of creating one\r\n * @param width the width to assign to the container\r\n * @returns the new container element\r\n */\r\nexport var getNewContainer = function (doc, type, passedContainer, width) {\r\n    if (passedContainer) {\r\n        return passedContainer;\r\n    }\r\n    var container = doc.createElement(type);\r\n    container.style.width = typeof width === 'number' ? width + \"px\" : width;\r\n    return container;\r\n};\r\n/**\r\n * @function isElement\r\n *\r\n * @description\r\n * is the object passed an element\r\n *\r\n * @param object the object to test\r\n * @returns is the object an element\r\n */\r\nexport var isHtmlElement = function (object) {\r\n    return object instanceof HTMLElement || object instanceof HTMLDocument;\r\n};\r\n/**\r\n * @function getRenderedElement\r\n *\r\n * @description\r\n * get the element rendered into the container\r\n *\r\n * @param container the container to render into\r\n * @param element the element to render into the container\r\n * @returns the ReactElement rendered as a DOM element\r\n */\r\nexport var getRenderedElement = function (container, element) {\r\n    // @ts-ignore\r\n    return new Promise(function (resolve) { return render(element, container, resolve); }).then(function () {\r\n        if (!isHtmlElement(container.firstChild)) {\r\n            return null;\r\n        }\r\n        return findDOMNode(container.firstChild);\r\n    });\r\n};\r\n//# sourceMappingURL=element.js.map","map":"{\"version\":3,\"file\":\"element.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/element.ts\"],\"names\":[],\"mappings\":\"AAAA,sCAAsC;AAEtC,wBAAwB;AACxB,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,WAAW,CAAC;AAIhD,OAAO,EAAE,mBAAmB,EAAE,MAAM,aAAa,CAAC;AAElD;;;;;;;;GAQG;AACH,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAAC,GAAiB;IAChD,IAAM,SAAS,GAAG,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAE3C,SAAS,CAAC,EAAE,GAAG,mBAAmB,CAAC;IAEnC,SAAS,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC;IACjC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;IACtC,SAAS,CAAC,KAAK,CAAC,GAAG,GAAG,SAAS,CAAC;IAChC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;IAEtC,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC;AAEF;;;;;;;;;;;GAWG;AACH,MAAM,CAAC,IAAM,eAAe,GAAG,UAC7B,GAAiB,EACjB,IAAY,EACZ,eAAwB,EACxB,KAAsB;IAEtB,IAAI,eAAe,EAAE;QACnB,OAAO,eAAe,CAAC;KACxB;IAED,IAAM,SAAS,GAAG,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAE1C,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAI,KAAK,OAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IAEzE,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC;AAEF;;;;;;;;GAQG;AACH,MAAM,CAAC,IAAM,aAAa,GAAG,UAAC,MAAW;IACvC,OAAA,MAAM,YAAY,WAAW,IAAI,MAAM,YAAY,YAAY;AAA/D,CAA+D,CAAC;AAElE;;;;;;;;;GASG;AACH,MAAM,CAAC,IAAM,kBAAkB,GAAG,UAChC,SAAkB,EAClB,OAA0B;IAE1B,aAAa;IACb,OAAA,IAAI,OAAO,CAAC,UAAA,OAAO,IAAI,OAAA,MAAM,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC,EAAnC,CAAmC,CAAC,CAAC,IAAI,CAAC;QAC/D,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;YACxC,OAAO,IAAI,CAAC;SACb;QAED,OAAO,WAAW,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IAC3C,CAAC,CAAC;AANF,CAME,CAAC\"}"}
